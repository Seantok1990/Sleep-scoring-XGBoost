createDataPartition(y=iris,p=0.6,list=F)
createDataPartition(y=iris$Species,p=0.6,list=F)
?do.call
label='Species'
iris$label
input_data=iris
eval(parse=text,paste('input_data$',label,sep=''))
eval(parse(text=paste('input_data$',label,sep='')))
eval(parse(text=paste('createDataPartition(y=input_data$',label',p=',p,',list=F',sep='')))
paste('createDataPartition(y=input_data$',label',p=',p,',list=F',sep='')
eval(parse(text=paste('createDataPartition(y=input_data$',label,',p=',p,',list=F',sep='')))
text=paste('createDataPartition(y=input_data$',label,',p=',p,'
)
)
)
)text=paste('createDataPartition(y=input_data$',label,',p=',p))
)text=paste('createDataPartition(y=input_data$',label,',p=',p)
eval(parse(text=paste('createDataPartition(y=input_data$',label,',p=',p,',list=F)',sep='')))
text=paste('createDataPartition(y=input_data$',label,',p=',p)
text=paste('createDataPartition(y=input_data$',label)
text
text=paste('createDataPartition(y=input_data$',label,',p=',p)
text=paste('createDataPartition(y=input_data$',label,',p=',as.character(p))
p
p=0.6
text=paste('createDataPartition(y=input_data$',label,',p=',as.character(p))
text=paste('createDataPartition(y=input_data$',label,',p=',as.character(p),sep='')
text
eval(parse(text=paste('createDataPartition(y=input_data$',label,',p=',p,',list=F)',sep='')))
eval(parse(text=paste('input.index=createDataPartition(y=input_data$',label,',p=',p,',list=F)',sep='')))
train=input_data[input.index,]
train
train=input_data[input.index,]
test=setdiff(input_data,input_data[input.index,])
test
return(train,test)
split_data=function(input_data,label,p)
{
eval(parse(text=paste('input.index=createDataPartition(y=input_data$',label,',p=',p,',list=F)',sep='')))
train=input_data[input.index,]
test=setdiff(input_data,input_data[input.index,])
return(train,test)
}
split_data(iris,'Species',0.6)
split_data=function(input_data,label,p)
{
eval(parse(text=paste('input.index=createDataPartition(y=input_data$',label,',p=',p,',list=F)',sep='')))
train=input_data[input.index,]
test=setdiff(input_data,input_data[input.index,])
return(c(train,test))
}
split_data(iris,'Species',0.6)
dataset=split_data(iris,'Species',0.6)
dataset
split_data=function(input_data,label,p)
{
eval(parse(text=paste('input.index=createDataPartition(y=input_data$',label,',p=',p,',list=F)',sep='')))
train=input_data[input.index,]
test=setdiff(input_data,input_data[input.index,])
return(c(list(train),list(test)))
}
dataset=split_data(iris,'Species',0.6)
dataset[1]
unlist(dataset[1])
as.data.frame(dataset[[1]])
c(train,test)=split_data(iris,'Species',0.6)
list2env(split_data(iris,'Species',0.6))
list2env(split_data(iris,'Species',0.6),envir=globalenv())
dataset=split_data(iris,'Species',0.6)
train=as.data.frame(dataset[[1]]);test=as.data.frame(dataset[[2]]);
train
test
cbind(train,0)
cbind(list(train),0)
str(train)
train.label=matrix(nrow=nrow(train))
train.label
'setosa'%in% train$Species
train$Species %in% 'setosa'
train.label[train$Species %in% 'setosa']=1
train.label[train$Species %in% 'setosa']=1;train.label[train$Species %in% 'virginica']=2;train.label[train$Species %in% 'setosa']=3;
train.label
train.label[train$Species %in% 'setosa']=1;train.label[train$Species %in% 'virginica']=2;train.label[train$Species %in% 'versicolor']=3;
xgboost(data=train,label=train.label,max.depth=2,eta=1,nthread=2,nrounds=2,objective='multi:softmax')
xgboost(data=train,label=train.label,max.depth=2,eta=1,nthread=2,nrounds=2,num_class=3,objective='multi:softmax')
data=as.matrix(train[,1:4])
data
xgboost(data=as.matrix(train[,1:4]),label=train.label,max.depth=2,eta=1,nthread=2,nrounds=2,num_class=3,objective='multi:softmax')
train.label[train$Species %in% 'setosa']=0;train.label[train$Species %in% 'virginica']=1;train.label[train$Species %in% 'versicolor']=2;
xgboost(data=as.matrix(train[,1:4]),label=train.label,max.depth=2,eta=1,nthread=2,nrounds=2,num_class=3,objective='multi:softmax')
xgboost(data=as.matrix(train[,1:4]),label=train.label,max.depth=2,eta=1,nthread=2,nrounds=10,num_class=3,objective='multi:softmax')
model=xgboost(data=as.matrix(train[,1:4]),label=train.label,max.depth=2,eta=1,nthread=2,nrounds=10,num_class=3,objective='multi:softmax')
model
model=xgboost(data=as.matrix(train[,1:4]),label=train.label,max.depth=5,eta=1,nthread=2,nrounds=10,num_class=3,objective='multi:softmax')
pred=predict(model,as.matrix(test))
pred=predict(model,as.matrix(test[1:4]))
pred
test.label[test$Species %in% 'setosa']=0;test.label[test$Species %in% 'virginica']=1;test.label[test$Species %in% 'versicolor']=2;
test.label=matrix(nrow=nrow(test));
test.label[test$Species %in% 'setosa']=0;test.label[test$Species %in% 'virginica']=1;test.label[test$Species %in% 'versicolor']=2;
test.label
t(test.label)
unlist(t(test.label))
as.matrix(t(test.label))
as.numeric(t(test.label))
dataset=split_data(iris,'Species',0.6)
train=as.data.frame(dataset[[1]]);test=as.data.frame(dataset[[2]]);
train.label=matrix(nrow=nrow(train));
train.label[train$Species %in% 'setosa']=0;train.label[train$Species %in% 'virginica']=1;train.label[train$Species %in% 'versicolor']=2;
test.label=matrix(nrow=nrow(test));
test.label[test$Species %in% 'setosa']=0;test.label[test$Species %in% 'virginica']=1;test.label[test$Species %in% 'versicolor']=2;
test.label=as.numeric(t(test.label))
model=xgboost(data=as.matrix(train[,1:4]),label=train.label,max.depth=5,eta=1,nthread=2,nrounds=10,num_class=3,objective='multi:softmax')
pred=predict(model,as.matrix(test[1:4]))
err_rate=pred-test;
pred
err_rate=pred-test.label;
err_rate
pred
test.label
err_rate=mean(pred-test.label);
err_rate=mean(pred!=test.label);
err_rate
input_file='S:/LAB_Kent/Studies/Sleep scoring XGBoost/tsv files'
input_file='S:/LAB_Kent/Studies/Sleep scoring XGBoost/tsv files/Mouse#1_2022-06-27_13_38_59_power_scores.tsv'
df1=read.delim(input_file,sep = '\t')
input_file='S:/LAB_Kent/Studies/Sleep scoring XGBoost/tsv files/Mouse#1_2022-06-27_13_38_59_power_scores.tsv'
df1=read.delim(input_file,sep = '\t')
df1=read.delim(input_file,sep = '\t')
df1
View(df1)
input_file='S:/LAB_Kent/Studies/Sleep scoring XGBoost/tsv files/Mouse#2_2022-06-27_13_46_47_power_scores.tsv'
df1=read.delim(input_file,sep = '\t')
df1=read.delim2(input_file,sep = '\t')
read_file(input_file)
df1=read.delim(input_file,sep = '                               \n')
df1=read.delim(input_file,sep = '\t')
df1
Sys.setenv("MC_CORES"=11L)
library(ggplot2)
library(reshape2)
library(gsignal)
library(shiny)
library(data.table)
library(edf)
library(MSMVSampEn)
Sys.setenv("MC_CORES"=11L)
library(parallel)
options('mc.cores')
?parallel
install.packages('httr')
library(httr)
API_KEY='pk_60661489_1K9JXOSDM2M3ZAN2F63TD8KQSARI52QJ'
url='https://api.clickup.com/api/v2/oauth/token?client_id=string&client_secret=string&code=string'
data_req <- POST(url,verbose())
content(data_req)
data_req <- POST(url,
add_headers("Content-Type" = "multipart/form-data", "Authorization" = "pk_60661489_1K9JXOSDM2M3ZAN2F63TD8KQSARI52QJ"),
verbose())
content(data_req)
API_KEY='pk_60661489_1K9JXOSDM2M3ZAN2F63TD8KQSARI52QJ'
client_id='60661489'
url='https://api.clickup.com/api/v2/task/'
data_req <- GET(
url,
add_headers("Authorization" = API_KEY),
verbose()
)
content(data_req)
url='https://api.clickup.com/api/v2/team'
data_req <- GET(
url,
add_headers("Authorization" = API_KEY),
verbose()
)
content(data_req)
library(curl)
GET('https://api.clickup.com/api/v2/user', add_headers(key='pk_60661489_1K9JXOSDM2M3ZAN2F63TD8KQSARI52QJ')
GET('https://api.clickup.com/api/v2/user', add_headers(key='pk_60661489_1K9JXOSDM2M3ZAN2F63TD8KQSARI52QJ'))
k=GET('https://api.clickup.com/api/v2/user', add_headers(key='pk_60661489_1K9JXOSDM2M3ZAN2F63TD8KQSARI52QJ'))
k
data_req <- GET(url,add_headers("Authorization" = API_KEY),verbose())
content(data_req)
data_req <- GET(url,add_headers("Authorization" = API_KEY))
content(data_req)
output=content(data_req)
output
"%&%" <- function(x, y)paste0(x,y)
space_id='24305937'
url = "https://api.clickup.com/api/v2/space/" %&% space_id %&% "/folder?archived=false"
data_req <- GET(url,add_headers("Authorization" = API_KEY))
output=content(data_req)
url='https://api.clickup.com/api/v2/team'
data_req <- GET(url,add_headers("Authorization" = API_KEY))
output=content(data_req)
team_id='24305937'
url = "https://api.clickup.com/api/v2/team/" %&% team_id %&% "/space?archived=false"
data_req <- GET(url,add_headers("Authorization" = API_KEY))
output=content(data_req)
url = "https://api.clickup.com/api/v2/space/" %&% space_id %&% "/folder?archived=false"
data_req <- GET(url,add_headers("Authorization" = API_KEY))
output=content(data_req)
team_id='24305937'
url = "https://api.clickup.com/api/v2/team/" %&% team_id %&% "/space?archived=false"
data_req <- GET(url,add_headers("Authorization" = API_KEY))
output=content(data_req)
team_id='24305937'
url = "https://api.clickup.com/api/v2/team/" %&% team_id %&% "/space?archived=false"
data_req <- GET(url,add_headers("Authorization" = API_KEY))
output=content(data_req)
output$spaces$id
output$spaces
output$spaces[1]
output$spaces[1]$id
output$spaces[1]
output$spaces[[1]]
output$spaces[[1]]$id
space_ids=output$spaces[[,]]$id
nrow(output$spaces)
ncol(output$spaces)
length(output$spaces)
space_ids=output$spaces[[1:length(output$spaces))]]$id
space_ids=output$spaces[[1:length(output$spaces)]]$id
length(output$spaces
)
output$spaces[[1:length(output$spaces)]]
output$spaces[[2]]
output$spaces[[2]]$id
output$spaces[[3]]$id
output$spaces[[1]]$id
space_ids=output$spaces[[1:3]]$id
space_ids=output$spaces[[1:2]]$id
space_ids=output$spaces[[c(1,3)]]$id
space_ids
space_ids=output$spaces[[c(1:3)]]$id
space_ids=output$spaces[[c(1,2)]]$id
space_ids=output$spaces[c(1,2)]$id
space_ids
space_ids=output$spaces[1]$id
space_ids
spaces=output$spaces
spaces
unlist(spaces)
data=unlist(spaces)
data[1]
data
names(data)
data['id']
data['id_2']
data['id1']
names['id']
data['id']
data[1
]
data[20]
data[21]
View(data)
data[["id"]]
grep('id',names(data))
names(data)=='id'
spaces=unlist(output$spaces)
space_ids=spaces[names(spaces)=='id']
space_ids
space_ids=cbind(spaces[names(spaces)=='id'])
space_ids
space_ids=data.frame(spaces[names(spaces)=='id'])
space_ids
space_ids=spaces[names(spaces)=='id']
space_ids
space_ids[1]
space_ids[2]
space_ids[3]
space_id=spaces[1]
space_id
space_id=space
url = "https://api.clickup.com/api/v2/space/" %&% space_id %&% "/folder?archived=false"
data_req <- GET(url,add_headers("Authorization" = API_KEY))
space_output=content(data_req)
space_output
space_output$folders
space_output$folders[1]
space_output$folders[[1]]$id
space_output$folders[[1]]$name
space_output$folders[[1:2]]$name
folders=unlist(space_output$folders)
folder_names=spaces[names(spaces)=='name']
folder_names
folder_names=spaces[names(spaces)=='name']
folder_ids=spaces[names(spaces)=='id']
folder=folder_ids[1]
folder
folder_names=folders[names(spaces)=='name']
folder_ids=folders[names(spaces)=='id']
folder
folder=folder_ids[1]
folder
folder_id=folder
folder_id=folder
url = "https://api.clickup.com/api/v2/folder/" %&% folder_id
data_req <- GET(url,add_headers("Authorization" = API_KEY))
folder_output=content(data_req)
folder_output
folder_output$lists
list_info=unlist(folder_output$lists)
list_ids=list_info[names(spaces)=='id']
list_ids
list_ids=list_info[names(list_info)=='id']
list_ids
names(list_info)
folder_output$name
folder_output$space
folder_output$lists
folder_output$id
list_ids
output$spaces
list_info=unlist(space_output$lists)
list_info
output$spaces[1]
View(output)
url='https://app.clickup.com/api/v2/docs'
data_req <- GET(url,add_headers("Authorization" = API_KEY))
output=content(data_req)
as.data.frame(space_output)
space_output
remotes::install_github("psolymos/clickrup")
library(clickrup)
teams=cu_get_teams()
cu_get_pat()
teams=cu_get_teams(24305937)
teams=cu_get_teams('24305937')
teams=cu_get_spaces('24305937')
file.edit("~/.Renviron")
Sys.getenv("CU_PAT")
Sys.getenv("CU_PAT")
teams=cu_get_teams()
library(clickrup)
teams=cu_get_teams()
teams
team_id=teams$teams[[1]]$id
spaces=cu_get_spaces(team_id)
spaces
spaces=cu_get_spaces(team_id)
spaces
spaces$spaces[[1]]$id
space_ids=spaces$spaces[[1]]$id
library(dplyr)
team_ids=unlist(teams$teams) %>% .[names(.)=='id']
team_ids
team=team_id
team
spaces=cu_get_spaces(team)
space_ids=unlist(spaces$space) %>% .[names(.)=='id']
space_ids
lists=cu_get_list(space)
space=space_ids[1]
lists=cu_get_list(space)
?cu_get_list
lists=cu_get_lists(space)
folders=cu_get_folders(space)
folder_ids=unlist(folders$folder) %>% .[names(.)=='id']
flder_ids
folder_ids
folder_ids=unlist(folders$folder) %>% .[names(.)=='id']
folder=folder_id[1]
lists=cu_get_lists(folder)
lists
as.data.frame(lists)
unlist(lists)
lists_ids=unlist(lists$lists) %>% .[names(.)=='id']
lists_ids
tasks=cu_get_tasks(list_ids)
tasks
"%&%" <- function(x, y)paste0(x,y)
url = "https://api.clickup.com/api/v2/list/" %&% list_ids %&% "/task?archived=false&page=0&order_by=string&reverse=true&subtasks=true&statuses=string&include_closed=true&assignees=string&tags=string&due_date_gt=0&due_date_lt=0&date_created_gt=0&date_created_lt=0&date_updated_gt=0&date_updated_lt=0&date_done_gt=0&date_done_lt=0&custom_fields=string"
data_req <- GET(
url,
add_headers("Content-Type" = "application/json", "Authorization" = CU_PAT),
verbose()
)
library(httr)
data_req <- GET(
url,
add_headers("Content-Type" = "application/json", "Authorization" = CU_PAT),
verbose()
)
cu_get_pat()
fa=cu_get_pat()
data_req <- GET(
url,
add_headers("Content-Type" = "application/json", "Authorization" = cu_get_pat()),
verbose()
)
data_req
content(data_req)
content(
lists_ids=unlist(lists$lists) %>% .[names(.)=='id']
url = "https://api.clickup.com/api/v2/list/" %&% list_ids %&% "/task?archived=false&page=0&order_by=string&reverse=true&subtasks=true&include_closed=true&assignees=string&tags=string&due_date_gt=0&due_date_lt=0&date_created_gt=0&date_created_lt=0&date_updated_gt=0&date_updated_lt=0&date_done_gt=0&date_done_lt=0&custom_fields=string"
url = "https://api.clickup.com/api/v2/list/" %&% list_ids %&% "/task?archived=false&page=0&order_by=string&reverse=true&subtasks=true&include_closed=true&assignees=string&tags=string&due_date_gt=0&due_date_lt=0&date_created_gt=0&date_created_lt=0&date_updated_gt=0&date_updated_lt=0&date_done_gt=0&date_done_lt=0&custom_fields=string"
data_req <- GET(
url,
add_headers("Content-Type" = "application/json", "Authorization" = cu_get_pat()),
verbose()
)
content(data_req)
url = "https://api.clickup.com/api/v2/list/" %&% list_ids %&% "/task?archived=false&page=0&order_by=string&reverse=true&subtasks=true"
data_req <- GET(
url,
add_headers("Content-Type" = "application/json", "Authorization" = cu_get_pat()),
verbose()
)
content(data_req)
url = "https://api.clickup.com/api/v2/list/" %&% list_ids %&% "/task?archived=false&page=0&order_by=string&reverse=true&subtasks=true&include_closed=true&due_date_gt=0&due_date_lt=0&date_created_gt=0&date_created_lt=0&date_updated_gt=0&date_updated_lt=0&date_done_gt=0&date_done_lt=0&custom_fields=string"
data_req <- GET(
url,
add_headers("Content-Type" = "application/json", "Authorization" = cu_get_pat()),
verbose()
)
content(data_req)
url = "https://api.clickup.com/api/v2/list/" %&% list_ids %&% "/task?archived=false&page=0&order_by=string&reverse=true&subtasks=true&include_closed=true&due_date_gt=0&due_date_lt=0&date_created_gt=0&date_created_lt=0&date_updated_gt=0&date_updated_lt=0&date_done_gt=0&date_done_lt=0"
data_req <- GET(
url,
add_headers("Content-Type" = "application/json", "Authorization" = cu_get_pat()),
verbose()
)
content(data_req)
list_ids
url = "https://api.clickup.com/api/v2/list/" %&% list_ids
data_req <- GET(
url,
add_headers("Content-Type" = "application/json", "Authorization" = cu_get_pat()),
verbose()
)
content(data_req)
tasks=cu_get_tasks(list_ids,archived = F,subtasks=T)
tasks
unlist(tasks,recursive=F)
task_list=unlist(tasks,recursive=F)
do.call(rbind.data.frame, tasks)
do.call(rbind.data.frame, tasks$tasks)
do.call(rbind.data.frame, tasks$tasks[[1]])
tasks
unlist(tasks)
tasks=cu_get_tasks(list_ids,archived = F,subtasks=T)
all_tasks=unlist(tasks) %>% .[names(.)=='tasks.name']
all_tasks
task_names=unlist(tasks) %>% .[names(.)=='tasks.name']
task_start_dates=unlist(tasks) %>% .[names(.)=='tasks.start_date']
task_end_dates=unlist(tasks) %>% .[names(.)=='tasks.due_date']
task_asignees=unlist(tasks) %>% .[names(.)=='tasks.assignees.username']
task_asignees
task_start_dates
task_start_dates=unlist(tasks) %>% .[names(.)=='tasks.start_date'] %>%as.POSIXct(., origin="1970-01-01"))
task_start_dates=unlist(tasks) %>% .[names(.)=='tasks.start_date'] %>%as.POSIXct(., origin="1970-01-01"))
task_start_dates=unlist(tasks) %>% .[names(.)=='tasks.start_date'] %>%as.POSIXct(., origin="1970-01-01")
library(anytime)
install.packages('anytime')
library(anytime)
anytime(task_start_dates)
anydate(task_start_dates)
task_start_dates
cu_date_from(task_start_dates)
task_start_dates=unlist(tasks) %>% .[names(.)=='tasks.start_date'] %>%cu_date_from(.)
task_end_dates=unlist(tasks) %>% .[names(.)=='tasks.due_date']%>%cu_date_from(.)
task_start_dates
task_asignees
grep('status',unlist(tasks))
tasks
grep('status',names(unlist(tasks)))
unlist(tasks)[grep('status',names(unlist(tasks)))]
unlist(tasks)[grep('assignees',names(unlist(tasks)))]
unlist(tasks)[grep('assignee',names(unlist(tasks)))]
unlist(tasks)[grep('task',names(unlist(tasks)))]
task_names=unlist(tasks) %>% .[names(.)=='tasks.name']
task_start_dates=unlist(tasks) %>% .[names(.)=='tasks.start_date'] %>%cu_date_from(.)
task_end_dates=unlist(tasks) %>% .[names(.)=='tasks.due_date']%>%cu_date_from(.)
task_asignees=unlist(tasks) %>% .[names(.)=='tasks.assignees.username']
task_status=unlist(tasks) %>% .[names(.)=='tasks.status.status']
c(task_names,task_start_dates,task_end_dates,task_asignees,task_status)
cbind(task_names,task_start_dates,task_end_dates,task_asignees,task_status)
tasks=cu_get_tasks(list_ids,archived = F,subtasks=T)
task_names=unlist(tasks) %>% .[names(.)=='tasks.name']
task_start_dates=unlist(tasks) %>% .[names(.)=='tasks.start_date'] %>%cu_date_from(.)
task_end_dates=unlist(tasks) %>% .[names(.)=='tasks.due_date']%>%cu_date_from(.)
task_asignees=unlist(tasks) %>% .[names(.)=='tasks.assignees.username']
task_status=unlist(tasks) %>% .[names(.)=='tasks.status.status']
cbind(task_names,task_start_dates,task_end_dates,task_asignees,task_status)
task_start_dates=unlist(tasks) %>% .[names(.)=='tasks.start_date'] %>%cu_date_from(.)
task_start_dates
cbind(task_names,task_start_dates,task_end_dates,task_asignees,task_status)
task_start_dates=unlist(tasks) %>% .[names(.)=='tasks.start_date'] %>%cu_date_from(.) %>% date.str(.)
as.character(task_start_dates)
task_start_dates=unlist(tasks) %>% .[names(.)=='tasks.start_date'] %>%cu_date_from(.) %>% as.character(.)
task_end_dates=unlist(tasks) %>% .[names(.)=='tasks.due_date']%>%cu_date_from(.)%>% as.character(.)
task_asignees=unlist(tasks) %>% .[names(.)=='tasks.assignees.username']
task_status=unlist(tasks) %>% .[names(.)=='tasks.status.status']
cbind(task_names,task_start_dates,task_end_dates,task_asignees,task_status)
task_asignees
library(shiny); runApp('S:/LAB_Kent/Studies/Sleep scoring XGBoost/R_shiny.app.R')
View(folder_output)
if (!require(chatgpt)){install.packages('chatgpt')}
install_github('https://github.com/jcrodriguez1989/chatgpt')
library(devtools)
install_github('https://github.com/jcrodriguez1989/chatgpt')
library(chatgpt)
chatgpt::optimize_code()
refactor_code('
"%&%" <- function(x, y)paste0(x,y)
teams=cu_get_teams()
team_ids=unlist(teams$teams) %>% .[names(.)=='id']
getwd()
setwd('S:/LAB_Kent/Studies/Sleep scoring XGBoost')
refactor_code('XGBoost.R')
